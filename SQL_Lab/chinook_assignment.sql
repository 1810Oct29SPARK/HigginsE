-- SQL LAB CHINOOK HOMEWORK ASSIGNMENT --
-- AUTHOR: EDDY SOMA --
-- FINISHED ON ?? --


-- ==========SECTION 2 SQL QUERIES========== --

-- 2.1 SELECT --

-- TASK: SELECT ALL RECORDS FROM THE EMPLOYEE TABLE.

-- TASK: SELECT ALL RECORDS FROM THE EMPLOYEE TABLE WHERE LAST NAME IS KING.

-- TASK: SELECT ALL RECORDS FROM THE EMPLOYEE TABLE WHERE FIRST NAME IS ANDREW AND REPORTSTO IS NULL.

-- 2.2 ORDER BY --

-- TASK: SELECT ALL ALBUMS IN ALBUM TABLE AND SORT RESULT SET IN DESCENDING ORDER BY TITLE.

-- TASK: SELECT FIRST NAME FROM CUSTOMER AND SORT RESULT SET IN ASCENDING ORDER BY CITY.

-- 2.3 INSERT INTO --

-- TASK: INSERT TWO NEW RECORDS INTO GENRE TABLE.

-- TASK: INSERT TWO NEW RECORDS INTO EMPLOYEE TABLE.

-- TASK: INSERT TWO NEW RECORDS INTO CUSTOMER TABLE.

-- 2.4 UPDATE --

-- TASK: UPDATE AARON MITCHELL IN CUSTOMER TABLE TO ROBERT WALTER.

-- TASK: UPDATE NAME OF ARTIST IN THE ARTIST TABLE "CREEDENCE CLEARWATER REVIVAL" TO "CCR".

-- 2.5 LIKE --

-- TASK: SELECT ALL INVOICES WITH A BILLING ADDRESS LIKE "T%".

-- 2.6 BETWEEN --

-- TASK: SELECT ALL INVOICES THAT HAVE A TOTAL BETWEEN 15 AND 50.

-- TASK: SELECT ALL EMPLOYEES HIRED BETWEEN 1ST OF JUNE 2003 AND 1ST OF MARCH 2004.

-- 2.7 DELETE --

-- TASK: DELETE A RECORD IN CUSTOMER TABLE WHERE THE NAME IS ROBERT WALTER.


-- ==========SECTION 3 SQL FUNCTIONS========== --

-- 3.1 SYSTEM DEFINED FUNCTIONS --

-- TASK: CREATE A FUNCTION THAT RETURNS THE CURRENT TIME.

-- TASK: CREATE A FUNCTION THAT RETURNS THE LENGTH OF NAME IN MEDIATYPE TABLE.

-- 3.2 SYSTEM DEFINED AGGREGATE FUNCTIONS --

-- TASK: CREATE A FUNCTION THAT RETURNS THE AVERAGE TOTAL OF ALL INVOICES.

-- TASK: CREATE A FUNCTION THAT RETURNS THE MOST EXPENSIVE TRACK.

-- 3.3 USER DEFINED SCALAR FUNCTIONS --

-- TASK: CREATE A FUNCTION THAT RETURNS THE AVERAGE PRICE OF INVOICELINE ITEMS IN THE INVOICELINE TABLE.

-- 3.4 USER DEFINED TABLE VALUED FUNCTIONS

-- TASK: CREATE A FUNCTION THAT RETURNS ALL EMPLOYEES WHO ARE BORN AFTER 1968.


-- ==========SECTION 4 STORED PROCEDURES========== --

-- 4.1 BASIC STORED PROCEDURE --

-- TASK: CREATE A STORED PROCEDURE THAT SELECTS THE FIRST AND LAST NAMES OF ALL THE EMPLOYEES.

-- 4.2 STORED PROCEDURE INPUT PARAMETERS --

-- TASK: CREATE A STORED PROCEDURE THAT UPDATES THE PERSONAL INFORMATION OF AN EMPLOYEE.

-- TASK: CREATE A STORED PROCEDURE THAT RETURNS THE MANAGERS OF AN EMPLOYEE.

-- 4.3 STORED PROCEDURE OUTPUT PARAMETERS --

-- TASK: CREATE A STORED PROCEDURE THAT RETURNS THE NAME AND COMPANY OF A CUSTOMER.


-- ==========SECTION 5 TRANSACTIONS========== --

-- TASK: CREATE A TRANSACTION THAT GIVEN A INVOICEID WILL DELETE THAT INVOICE.


-- ==========SECTION 6 TRIGGERS========== --

-- 6.1 AFTER/FOR --

-- TASK: CREATE AN AFTER INSERT TRIGGER ON THE EMPLOYEE TABLE FIRED AFTER A NEW RECORD IS INSERTED INTO THE TABLE.

-- TASK: CREATE AN AFTER UPDATE TRIGGER ON THE ALBUM TABLE THAT FIRES AFTER A ROW IS INSERTED IN THE TABLE.

-- TASK: CREATE AN AFTER DELETE TRIGGER ON THE CUSTOMER TABLE THAT FIRES AFTER A ROW IS DELETED FROM THE TABLE.


-- ==========SECTION 7 JOINS========== --

-- 7.1 INNER --

-- TASK: CREATE AN INNER JOIN THAT JOINS CUSTOMERS AND ORDERS AND SPECIFIES THE NAME OF THE CUSTOMER AND THE INVOICEID.

-- 7.2 OUTER --

-- TASK: CREATE AN OUTER JOIN THAT JOINS THE CUSTOMER AND INVOICE TABLE, SPECIFYING THE CUSTOMERID, FIRSTNAME, LASTNAME, INVOICEID, AND TOTAL.

-- 7.3 RIGHT --

-- TASK: CREATE A RIGHT JOIN THAT JOINS ALBUM AND ARTIST SPECIFYING ARTIST NAME AND TITLE.

-- 7.4 CROSS --

-- TASK: CREATE A CROSS JOIN THAT JOINS ALBUM AND ARTIST AND SORTS BY ARTIST NAME IN ASCENDING ORDER.

-- 7.5 SELF --

-- TASK: PERFORM A SELF-JOIN ON THE EMPLOYEE TABLE, JOINING ON THE REPORTSTO COLUMN.


-- ==========END OF SQL LAB ASSIGNMENT========== --